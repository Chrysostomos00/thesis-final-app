{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/oa0iScDLrh1tVFzSud2Dwc\n */\nexport const schema = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  properties: {\n    body: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['squared', 'rounded', 'small', 'checkered']\n      },\n      default: ['squared', 'rounded', 'small', 'checkered']\n    },\n    clothingColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['456dff', '54d7c7', '7555ca', '6dbb58', 'e24553', 'f3b63a', 'f55d81']\n    },\n    eyes: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['open', 'sleep', 'wink', 'glasses', 'happy', 'sunglasses']\n      },\n      default: ['open', 'sleep', 'wink', 'glasses', 'happy', 'sunglasses']\n    },\n    facialHair: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['beardMustache', 'pyramid', 'walrus', 'goatee', 'shadow', 'soulPatch']\n      },\n      default: ['beardMustache', 'pyramid', 'walrus', 'goatee', 'shadow', 'soulPatch']\n    },\n    facialHairProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 10\n    },\n    hair: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['long', 'sideShave', 'shortCombover', 'curlyHighTop', 'bobCut', 'curly', 'pigtails', 'curlyBun', 'buzzcut', 'bobBangs', 'bald', 'balding', 'cap', 'bunUndercut', 'fade', 'beanie', 'straightBun', 'extraLong', 'shortComboverChops', 'mohawk']\n      },\n      default: ['long', 'sideShave', 'shortCombover', 'curlyHighTop', 'bobCut', 'curly', 'pigtails', 'curlyBun', 'buzzcut', 'bobBangs', 'bald', 'balding', 'cap', 'bunUndercut', 'fade', 'beanie', 'straightBun', 'extraLong', 'shortComboverChops', 'mohawk']\n    },\n    hairColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['362c47', '6c4545', 'e15c66', 'e16381', 'f27d65', 'f29c65', 'dee1f5']\n    },\n    mouth: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['smile', 'frown', 'surprise', 'pacifier', 'bigSmile', 'smirk', 'lips']\n      },\n      default: ['smile', 'frown', 'surprise', 'pacifier', 'bigSmile', 'smirk', 'lips']\n    },\n    nose: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['mediumRound', 'smallRound', 'wrinkles']\n      },\n      default: ['mediumRound', 'smallRound', 'wrinkles']\n    },\n    skinColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['eeb4a4', 'e7a391', 'e5a07e', 'd78774', 'b16a5b', '92594b', '623d36']\n    }\n  }\n};","map":{"version":3,"names":["schema","$schema","properties","body","type","items","enum","default","clothingColor","pattern","eyes","facialHair","facialHairProbability","minimum","maximum","hair","hairColor","mouth","nose","skinColor"],"sources":["/Users/tommys/Desktop/ai14/frontend/node_modules/@dicebear/personas/lib/schema.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/oa0iScDLrh1tVFzSud2Dwc\n */\nexport const schema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    properties: {\n        body: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['squared', 'rounded', 'small', 'checkered'],\n            },\n            default: ['squared', 'rounded', 'small', 'checkered'],\n        },\n        clothingColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: [\n                '456dff',\n                '54d7c7',\n                '7555ca',\n                '6dbb58',\n                'e24553',\n                'f3b63a',\n                'f55d81',\n            ],\n        },\n        eyes: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['open', 'sleep', 'wink', 'glasses', 'happy', 'sunglasses'],\n            },\n            default: ['open', 'sleep', 'wink', 'glasses', 'happy', 'sunglasses'],\n        },\n        facialHair: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'beardMustache',\n                    'pyramid',\n                    'walrus',\n                    'goatee',\n                    'shadow',\n                    'soulPatch',\n                ],\n            },\n            default: [\n                'beardMustache',\n                'pyramid',\n                'walrus',\n                'goatee',\n                'shadow',\n                'soulPatch',\n            ],\n        },\n        facialHairProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 10,\n        },\n        hair: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'long',\n                    'sideShave',\n                    'shortCombover',\n                    'curlyHighTop',\n                    'bobCut',\n                    'curly',\n                    'pigtails',\n                    'curlyBun',\n                    'buzzcut',\n                    'bobBangs',\n                    'bald',\n                    'balding',\n                    'cap',\n                    'bunUndercut',\n                    'fade',\n                    'beanie',\n                    'straightBun',\n                    'extraLong',\n                    'shortComboverChops',\n                    'mohawk',\n                ],\n            },\n            default: [\n                'long',\n                'sideShave',\n                'shortCombover',\n                'curlyHighTop',\n                'bobCut',\n                'curly',\n                'pigtails',\n                'curlyBun',\n                'buzzcut',\n                'bobBangs',\n                'bald',\n                'balding',\n                'cap',\n                'bunUndercut',\n                'fade',\n                'beanie',\n                'straightBun',\n                'extraLong',\n                'shortComboverChops',\n                'mohawk',\n            ],\n        },\n        hairColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: [\n                '362c47',\n                '6c4545',\n                'e15c66',\n                'e16381',\n                'f27d65',\n                'f29c65',\n                'dee1f5',\n            ],\n        },\n        mouth: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'smile',\n                    'frown',\n                    'surprise',\n                    'pacifier',\n                    'bigSmile',\n                    'smirk',\n                    'lips',\n                ],\n            },\n            default: [\n                'smile',\n                'frown',\n                'surprise',\n                'pacifier',\n                'bigSmile',\n                'smirk',\n                'lips',\n            ],\n        },\n        nose: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['mediumRound', 'smallRound', 'wrinkles'],\n            },\n            default: ['mediumRound', 'smallRound', 'wrinkles'],\n        },\n        skinColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: [\n                'eeb4a4',\n                'e7a391',\n                'e5a07e',\n                'd78774',\n                'b16a5b',\n                '92594b',\n                '623d36',\n            ],\n        },\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}