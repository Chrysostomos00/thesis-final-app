{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/Vh7N9shKJTNHNo9prUzkZe\n */\nexport const schema = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  properties: {\n    blushes: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['default']\n      },\n      default: ['default']\n    },\n    blushesProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 50\n    },\n    body: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['tShirt', 'golf']\n      },\n      default: ['tShirt', 'golf']\n    },\n    bodyColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['e05a33', '3633e0', 'ff4dd8']\n    },\n    eyes: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['normal', 'confident', 'happy']\n      },\n      default: ['normal', 'confident', 'happy']\n    },\n    glasses: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['normal']\n      },\n      default: ['normal']\n    },\n    glassesProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 20\n    },\n    hair: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['balndess', 'slaughter', 'ponyTail', 'long', 'curly', 'stylish', 'elvis', 'classic02', 'classic01']\n      },\n      default: ['balndess', 'slaughter', 'ponyTail', 'long', 'curly', 'stylish', 'elvis', 'classic02', 'classic01']\n    },\n    hairColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['47280b', '1b0b47', 'ad3a20']\n    },\n    head: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['normal', 'wide', 'thin']\n      },\n      default: ['normal', 'wide', 'thin']\n    },\n    mouth: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['default', 'missingTooth']\n      },\n      default: ['default', 'missingTooth']\n    },\n    mustache: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['pencilThinBeard', 'pencilThin', 'horshoe', 'freddy']\n      },\n      default: ['pencilThinBeard', 'pencilThin', 'horshoe', 'freddy']\n    },\n    mustacheProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 20\n    },\n    skinColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['ffcb7e', 'f5d0c5', '836055']\n    }\n  }\n};","map":{"version":3,"names":["schema","$schema","properties","blushes","type","items","enum","default","blushesProbability","minimum","maximum","body","bodyColor","pattern","eyes","glasses","glassesProbability","hair","hairColor","head","mouth","mustache","mustacheProbability","skinColor"],"sources":["/Users/tommys/Desktop/ai14/frontend/node_modules/@dicebear/miniavs/lib/schema.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/Vh7N9shKJTNHNo9prUzkZe\n */\nexport const schema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    properties: {\n        blushes: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['default'],\n            },\n            default: ['default'],\n        },\n        blushesProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 50,\n        },\n        body: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['tShirt', 'golf'],\n            },\n            default: ['tShirt', 'golf'],\n        },\n        bodyColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: ['e05a33', '3633e0', 'ff4dd8'],\n        },\n        eyes: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['normal', 'confident', 'happy'],\n            },\n            default: ['normal', 'confident', 'happy'],\n        },\n        glasses: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['normal'],\n            },\n            default: ['normal'],\n        },\n        glassesProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 20,\n        },\n        hair: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'balndess',\n                    'slaughter',\n                    'ponyTail',\n                    'long',\n                    'curly',\n                    'stylish',\n                    'elvis',\n                    'classic02',\n                    'classic01',\n                ],\n            },\n            default: [\n                'balndess',\n                'slaughter',\n                'ponyTail',\n                'long',\n                'curly',\n                'stylish',\n                'elvis',\n                'classic02',\n                'classic01',\n            ],\n        },\n        hairColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: ['47280b', '1b0b47', 'ad3a20'],\n        },\n        head: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['normal', 'wide', 'thin'],\n            },\n            default: ['normal', 'wide', 'thin'],\n        },\n        mouth: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['default', 'missingTooth'],\n            },\n            default: ['default', 'missingTooth'],\n        },\n        mustache: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: ['pencilThinBeard', 'pencilThin', 'horshoe', 'freddy'],\n            },\n            default: ['pencilThinBeard', 'pencilThin', 'horshoe', 'freddy'],\n        },\n        mustacheProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 20,\n        },\n        skinColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: ['ffcb7e', 'f5d0c5', '836055'],\n        },\n    },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,MAAM,GAAG;EAClBC,OAAO,EAAE,yCAAyC;EAClDC,UAAU,EAAE;IACRC,OAAO,EAAE;MACLC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,SAAS;MACpB,CAAC;MACDC,OAAO,EAAE,CAAC,SAAS;IACvB,CAAC;IACDC,kBAAkB,EAAE;MAChBJ,IAAI,EAAE,SAAS;MACfK,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZH,OAAO,EAAE;IACb,CAAC;IACDI,IAAI,EAAE;MACFP,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM;MAC3B,CAAC;MACDC,OAAO,EAAE,CAAC,QAAQ,EAAE,MAAM;IAC9B,CAAC;IACDK,SAAS,EAAE;MACPR,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdS,OAAO,EAAE;MACb,CAAC;MACDN,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IAC1C,CAAC;IACDO,IAAI,EAAE;MACFV,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO;MACzC,CAAC;MACDC,OAAO,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO;IAC5C,CAAC;IACDQ,OAAO,EAAE;MACLX,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,QAAQ;MACnB,CAAC;MACDC,OAAO,EAAE,CAAC,QAAQ;IACtB,CAAC;IACDS,kBAAkB,EAAE;MAChBZ,IAAI,EAAE,SAAS;MACfK,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZH,OAAO,EAAE;IACb,CAAC;IACDU,IAAI,EAAE;MACFb,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CACF,UAAU,EACV,WAAW,EACX,UAAU,EACV,MAAM,EACN,OAAO,EACP,SAAS,EACT,OAAO,EACP,WAAW,EACX,WAAW;MAEnB,CAAC;MACDC,OAAO,EAAE,CACL,UAAU,EACV,WAAW,EACX,UAAU,EACV,MAAM,EACN,OAAO,EACP,SAAS,EACT,OAAO,EACP,WAAW,EACX,WAAW;IAEnB,CAAC;IACDW,SAAS,EAAE;MACPd,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdS,OAAO,EAAE;MACb,CAAC;MACDN,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IAC1C,CAAC;IACDY,IAAI,EAAE;MACFf,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM;MACnC,CAAC;MACDC,OAAO,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM;IACtC,CAAC;IACDa,KAAK,EAAE;MACHhB,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,SAAS,EAAE,cAAc;MACpC,CAAC;MACDC,OAAO,EAAE,CAAC,SAAS,EAAE,cAAc;IACvC,CAAC;IACDc,QAAQ,EAAE;MACNjB,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAE,CAAC,iBAAiB,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ;MAC/D,CAAC;MACDC,OAAO,EAAE,CAAC,iBAAiB,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ;IAClE,CAAC;IACDe,mBAAmB,EAAE;MACjBlB,IAAI,EAAE,SAAS;MACfK,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZH,OAAO,EAAE;IACb,CAAC;IACDgB,SAAS,EAAE;MACPnB,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;QACHD,IAAI,EAAE,QAAQ;QACdS,OAAO,EAAE;MACb,CAAC;MACDN,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IAC1C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}