{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuestionEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { FaGripVertical, FaTrash, FaEdit, FaSave, FaTimes, FaPlus, FaCheckSquare, FaRegSquare, FaCheck } from 'react-icons/fa';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../../../styles/QuizComponents.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionEditor({\n  questionData,\n  index,\n  onUpdate,\n  onDelete,\n  isEditing,\n  onToggleEdit,\n  activeId\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: questionData.tempId\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition: transition || undefined,\n    opacity: isDragging ? 0.8 : 1,\n    zIndex: isDragging ? 100 : 'auto' // Bring dragged item to front\n  };\n\n  // Local state for editing within this component\n  const [localQuestionText, setLocalQuestionText] = useState(questionData.question_text);\n  const [localChoices, setLocalChoices] = useState(() =>\n  // Initialize local choices with temporary IDs if they don't have them\n  questionData.choices.map(c => ({\n    ...c,\n    tempId: c.tempId || uuidv4()\n  })));\n  const [originalState, setOriginalState] = useState(null); // To store state before editing\n  const questionTextRef = useRef(null);\n\n  // Store original state when editing starts\n  useEffect(() => {\n    if (isEditing && !originalState) {\n      setOriginalState({\n        text: questionData.question_text,\n        choices: questionData.choices.map(c => ({\n          ...c,\n          tempId: c.tempId || uuidv4()\n        }))\n      });\n      setLocalQuestionText(questionData.question_text);\n      setLocalChoices(questionData.choices.map(c => ({\n        ...c,\n        tempId: c.tempId || uuidv4()\n      })));\n      // Auto-focus the question text area\n      setTimeout(() => {\n        var _questionTextRef$curr;\n        return (_questionTextRef$curr = questionTextRef.current) === null || _questionTextRef$curr === void 0 ? void 0 : _questionTextRef$curr.focus();\n      }, 0);\n    } else if (!isEditing && originalState) {\n      // Clear original state when exiting edit mode (saved or cancelled)\n      setOriginalState(null);\n    }\n    // Only run when isEditing changes\n  }, [isEditing, questionData.question_text, questionData.choices, originalState]);\n  const handleChoiceTextChange = (choiceTempId, newText) => {\n    setLocalChoices(prev => prev.map(c => c.tempId === choiceTempId ? {\n      ...c,\n      choice_text: newText\n    } : c));\n  };\n  const handleCorrectToggle = choiceTempId => {\n    // For MCQ, ensure only one is correct\n    setLocalChoices(prev => prev.map(c => ({\n      ...c,\n      is_correct: c.tempId === choiceTempId // Set clicked one to true, others to false\n    })));\n  };\n  const handleAddChoice = () => {\n    setLocalChoices(prev => [...prev, {\n      tempId: uuidv4(),\n      choice_text: '',\n      is_correct: false\n    } // New choice is incorrect by default\n    ]);\n  };\n  const handleDeleteChoice = choiceTempId => {\n    // Prevent deleting the last choice or the only correct choice\n    if (localChoices.length <= 1) return; // Need at least one choice\n    const choiceToDelete = localChoices.find(c => c.tempId === choiceTempId);\n    if (choiceToDelete !== null && choiceToDelete !== void 0 && choiceToDelete.is_correct && localChoices.filter(c => c.is_correct).length <= 1) return; // Don't delete the only correct one\n\n    setLocalChoices(prev => prev.filter(c => c.tempId !== choiceTempId));\n  };\n  const handleSaveChanges = () => {\n    // Basic validation within the editor before passing up\n    if (!localQuestionText.trim()) {\n      alert(\"Question text cannot be empty.\");\n      return;\n    }\n    if (questionData.question_type === 'mcq') {\n      if (localChoices.length < 2) {\n        alert(\"Multiple choice questions need at least 2 options.\");\n        return;\n      }\n      if (localChoices.some(c => !c.choice_text.trim())) {\n        alert(\"All answer choices must have text.\");\n        return;\n      }\n      if (localChoices.filter(c => c.is_correct).length !== 1) {\n        alert(\"Multiple choice questions must have exactly one correct answer selected.\");\n        return;\n      }\n    }\n    onUpdate({\n      question_text: localQuestionText,\n      choices: localChoices.map(({\n        tempId,\n        ...rest\n      }) => rest) // Remove tempId before saving\n      // Keep other fields like question_type, order_index as they were (handled in parent if needed)\n    });\n    // onToggleEdit(); // Parent will handle setting isEditing to false\n  };\n  const handleCancelEdit = () => {\n    // Restore from original state captured when editing started\n    if (originalState) {\n      setLocalQuestionText(originalState.text);\n      setLocalChoices(originalState.choices);\n    }\n    onToggleEdit(); // Exit edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `quiz-question-editor ${isEditing ? 'editing' : ''} ${isDragging ? 'dragging' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ...attributes,\n      ...listeners,\n      className: \"drag-handle\",\n      title: \"Drag to reorder question\",\n      children: /*#__PURE__*/_jsxDEV(FaGripVertical, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Q\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"question-type-badge\",\n          children: questionData.question_type.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: questionTextRef,\n          value: localQuestionText,\n          onChange: e => setLocalQuestionText(e.target.value),\n          placeholder: \"Enter question text...\",\n          rows: 3,\n          className: \"question-text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 26\n        }, this), questionData.question_type === 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choices-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Answer Choices (Mark correct with \", /*#__PURE__*/_jsxDEV(FaCheckSquare, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 74\n            }, this), \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this), localChoices.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choice-edit-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCorrectToggle(choice.tempId),\n              className: `correct-toggle-btn subtle-button ${choice.is_correct ? 'correct' : ''}`,\n              title: choice.is_correct ? \"Mark as incorrect\" : \"Mark as correct\",\n              children: choice.is_correct ? /*#__PURE__*/_jsxDEV(FaCheckSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 66\n              }, this) : /*#__PURE__*/_jsxDEV(FaRegSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 86\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: choice.choice_text,\n              onChange: e => handleChoiceTextChange(choice.tempId, e.target.value),\n              placeholder: `Choice ${choiceIndex + 1}`,\n              className: \"choice-text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteChoice(choice.tempId),\n              className: \"delete-choice-btn subtle-button\",\n              disabled: localChoices.length <= 1 || choice.is_correct && localChoices.filter(c => c.is_correct).length <= 1 // Prevent deleting last/only correct\n              ,\n              title: \"Delete choice\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 42\n            }, this)]\n          }, choice.tempId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddChoice,\n            className: \"add-choice-btn subtle-button\",\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 38\n            }, this), \" Add Choice\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text-display\",\n          children: questionData.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 26\n        }, this), questionData.question_type === 'mcq' && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"choices-display\",\n          children: questionData.choices.map(choice => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: choice.is_correct ? 'correct-answer' : '',\n            children: [choice.choice_text, \" \", choice.is_correct && /*#__PURE__*/_jsxDEV(FaCheck, {\n              title: \"Correct Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 85\n            }, this)]\n          }, choice.tempId || choice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-actions\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveChanges,\n          className: \"action-button save\",\n          title: \"Save Changes\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 115\n          }, this), \" Save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          className: \"action-button cancel subtle-button\",\n          title: \"Cancel Edit\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 129\n          }, this), \" Cancel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onToggleEdit,\n          className: \"action-button edit subtle-button\",\n          title: \"Edit Question\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 125\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDelete,\n          className: \"action-button delete subtle-button\",\n          title: \"Delete Question\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 125\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionEditor, \"JKtlNd2ADBZ4H6GbqyHnkDaObgU=\", false, function () {\n  return [useSortable];\n});\n_c = QuestionEditor;\nexport default QuestionEditor;\nvar _c;\n$RefreshReg$(_c, \"QuestionEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSortable","CSS","FaGripVertical","FaTrash","FaEdit","FaSave","FaTimes","FaPlus","FaCheckSquare","FaRegSquare","FaCheck","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionEditor","questionData","index","onUpdate","onDelete","isEditing","onToggleEdit","activeId","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","id","tempId","style","Transform","toString","undefined","opacity","zIndex","localQuestionText","setLocalQuestionText","question_text","localChoices","setLocalChoices","choices","map","c","originalState","setOriginalState","questionTextRef","text","setTimeout","_questionTextRef$curr","current","focus","handleChoiceTextChange","choiceTempId","newText","prev","choice_text","handleCorrectToggle","is_correct","handleAddChoice","handleDeleteChoice","length","choiceToDelete","find","filter","handleSaveChanges","trim","alert","question_type","some","rest","handleCancelEdit","ref","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","value","onChange","e","target","placeholder","rows","choice","choiceIndex","type","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuestionEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { FaGripVertical, FaTrash, FaEdit, FaSave, FaTimes, FaPlus, FaCheckSquare, FaRegSquare, FaCheck } from 'react-icons/fa';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../../../styles/QuizComponents.css';\n\nfunction QuestionEditor({ questionData, index, onUpdate, onDelete, isEditing, onToggleEdit, activeId }) {\n    const {\n        attributes, listeners, setNodeRef, transform, transition, isDragging\n    } = useSortable({ id: questionData.tempId });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition: transition || undefined,\n        opacity: isDragging ? 0.8 : 1,\n        zIndex: isDragging ? 100 : 'auto', // Bring dragged item to front\n    };\n\n    // Local state for editing within this component\n    const [localQuestionText, setLocalQuestionText] = useState(questionData.question_text);\n    const [localChoices, setLocalChoices] = useState(() =>\n         // Initialize local choices with temporary IDs if they don't have them\n         questionData.choices.map(c => ({ ...c, tempId: c.tempId || uuidv4() }))\n    );\n    const [originalState, setOriginalState] = useState(null); // To store state before editing\n    const questionTextRef = useRef(null);\n\n    // Store original state when editing starts\n    useEffect(() => {\n        if (isEditing && !originalState) {\n            setOriginalState({\n                text: questionData.question_text,\n                choices: questionData.choices.map(c => ({ ...c, tempId: c.tempId || uuidv4() }))\n            });\n            setLocalQuestionText(questionData.question_text);\n            setLocalChoices(questionData.choices.map(c => ({ ...c, tempId: c.tempId || uuidv4() })));\n             // Auto-focus the question text area\n             setTimeout(() => questionTextRef.current?.focus(), 0);\n\n        } else if (!isEditing && originalState) {\n            // Clear original state when exiting edit mode (saved or cancelled)\n            setOriginalState(null);\n        }\n        // Only run when isEditing changes\n    }, [isEditing, questionData.question_text, questionData.choices, originalState]);\n\n\n    const handleChoiceTextChange = (choiceTempId, newText) => {\n        setLocalChoices(prev => prev.map(c =>\n            c.tempId === choiceTempId ? { ...c, choice_text: newText } : c\n        ));\n    };\n\n    const handleCorrectToggle = (choiceTempId) => {\n         // For MCQ, ensure only one is correct\n        setLocalChoices(prev => prev.map(c => ({\n             ...c,\n             is_correct: c.tempId === choiceTempId // Set clicked one to true, others to false\n         })));\n    };\n\n     const handleAddChoice = () => {\n        setLocalChoices(prev => [\n            ...prev,\n            { tempId: uuidv4(), choice_text: '', is_correct: false } // New choice is incorrect by default\n        ]);\n    };\n\n    const handleDeleteChoice = (choiceTempId) => {\n         // Prevent deleting the last choice or the only correct choice\n        if (localChoices.length <= 1) return; // Need at least one choice\n        const choiceToDelete = localChoices.find(c => c.tempId === choiceTempId);\n        if (choiceToDelete?.is_correct && localChoices.filter(c => c.is_correct).length <= 1) return; // Don't delete the only correct one\n\n        setLocalChoices(prev => prev.filter(c => c.tempId !== choiceTempId));\n    };\n\n    const handleSaveChanges = () => {\n         // Basic validation within the editor before passing up\n         if (!localQuestionText.trim()) {\n             alert(\"Question text cannot be empty.\");\n             return;\n         }\n         if (questionData.question_type === 'mcq') {\n              if (localChoices.length < 2) {\n                  alert(\"Multiple choice questions need at least 2 options.\");\n                  return;\n              }\n              if (localChoices.some(c => !c.choice_text.trim())) {\n                  alert(\"All answer choices must have text.\");\n                  return;\n              }\n              if (localChoices.filter(c => c.is_correct).length !== 1) {\n                   alert(\"Multiple choice questions must have exactly one correct answer selected.\");\n                   return;\n              }\n         }\n\n        onUpdate({\n            question_text: localQuestionText,\n            choices: localChoices.map(({ tempId, ...rest }) => rest), // Remove tempId before saving\n            // Keep other fields like question_type, order_index as they were (handled in parent if needed)\n        });\n        // onToggleEdit(); // Parent will handle setting isEditing to false\n    };\n\n    const handleCancelEdit = () => {\n        // Restore from original state captured when editing started\n        if (originalState) {\n             setLocalQuestionText(originalState.text);\n             setLocalChoices(originalState.choices);\n        }\n        onToggleEdit(); // Exit edit mode\n    };\n\n    return (\n        <div ref={setNodeRef} style={style} className={`quiz-question-editor ${isEditing ? 'editing' : ''} ${isDragging ? 'dragging' : ''}`}>\n            {/* Drag Handle */}\n             <span {...attributes} {...listeners} className=\"drag-handle\" title=\"Drag to reorder question\">\n                <FaGripVertical />\n            </span>\n\n            <div className=\"question-content\">\n                <div className=\"question-header\">\n                    <span>Q{index + 1}</span>\n                    {/* Display Type (could be dropdown if editing) */}\n                    <span className='question-type-badge'>{questionData.question_type.toUpperCase()}</span>\n                </div>\n\n                {isEditing ? (\n                    <>\n                        {/* Question Text Area */}\n                         <textarea\n                            ref={questionTextRef}\n                            value={localQuestionText}\n                            onChange={(e) => setLocalQuestionText(e.target.value)}\n                            placeholder=\"Enter question text...\"\n                            rows={3}\n                            className='question-text-input'\n                         />\n                         {/* Choices Editor (for MCQ) */}\n                         {questionData.question_type === 'mcq' && (\n                            <div className=\"choices-editor\">\n                                <label>Answer Choices (Mark correct with <FaCheckSquare/>):</label>\n                                {localChoices.map((choice, choiceIndex) => (\n                                    <div key={choice.tempId} className='choice-edit-row'>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => handleCorrectToggle(choice.tempId)}\n                                            className={`correct-toggle-btn subtle-button ${choice.is_correct ? 'correct' : ''}`}\n                                            title={choice.is_correct ? \"Mark as incorrect\" : \"Mark as correct\"}\n                                        >\n                                            {choice.is_correct ? <FaCheckSquare /> : <FaRegSquare />}\n                                        </button>\n                                         <input\n                                             type=\"text\"\n                                             value={choice.choice_text}\n                                             onChange={(e) => handleChoiceTextChange(choice.tempId, e.target.value)}\n                                             placeholder={`Choice ${choiceIndex + 1}`}\n                                             className='choice-text-input'\n                                         />\n                                         <button\n                                             type=\"button\"\n                                             onClick={() => handleDeleteChoice(choice.tempId)}\n                                             className='delete-choice-btn subtle-button'\n                                             disabled={localChoices.length <= 1 || (choice.is_correct && localChoices.filter(c => c.is_correct).length <= 1)} // Prevent deleting last/only correct\n                                             title=\"Delete choice\"\n                                         >\n                                             <FaTimes />\n                                         </button>\n                                     </div>\n                                ))}\n                                <button type=\"button\" onClick={handleAddChoice} className='add-choice-btn subtle-button'>\n                                     <FaPlus /> Add Choice\n                                 </button>\n                             </div>\n                         )}\n                         {/* Add editors for other question types here later */}\n                     </>\n                 ) : (\n                     <>\n                         {/* Display Question Text */}\n                         <p className='question-text-display'>{questionData.question_text}</p>\n                         {/* Display Choices (for MCQ) */}\n                          {questionData.question_type === 'mcq' && (\n                            <ul className=\"choices-display\">\n                                {questionData.choices.map((choice) => (\n                                     <li key={choice.tempId || choice.id} className={choice.is_correct ? 'correct-answer' : ''}>\n                                         {choice.choice_text} {choice.is_correct && <FaCheck title=\"Correct Answer\"/>}\n                                     </li>\n                                 ))}\n                             </ul>\n                         )}\n                     </>\n                 )}\n             </div>\n\n             {/* Action Buttons */}\n             <div className=\"question-actions\">\n                 {isEditing ? (\n                     <>\n                         <button onClick={handleSaveChanges} className=\"action-button save\" title=\"Save Changes\"> <FaSave /> Save</button>\n                         <button onClick={handleCancelEdit} className=\"action-button cancel subtle-button\" title=\"Cancel Edit\"> <FaTimes /> Cancel</button>\n                     </>\n                 ) : (\n                     <>\n                         <button onClick={onToggleEdit} className=\"action-button edit subtle-button\" title=\"Edit Question\"> <FaEdit /></button>\n                         <button onClick={onDelete} className=\"action-button delete subtle-button\" title=\"Delete Question\"> <FaTrash /></button>\n                     </>\n                 )}\n             </div>\n        </div>\n    );\n}\n\nexport default QuestionEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}