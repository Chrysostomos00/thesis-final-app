{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/4nf3pyoOuM1U9Pa8M0cL6u\n */\nexport const schema = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  properties: {\n    baseColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      },\n      default: ['ffb300', '1e88e5', '546e7a', '6d4c41', '00acc1', 'f4511e', '5e35b1', '43a047', '757575', '3949ab', '039be5', '7cb342', 'c0ca33', 'fb8c00', 'd81b60', '8e24aa', 'e53935', '00897b', 'fdd835']\n    },\n    eyes: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['bulging', 'dizzy', 'eva', 'frame1', 'frame2', 'glow', 'happy', 'hearts', 'robocop', 'round', 'roundFrame01', 'roundFrame02', 'sensor', 'shade01']\n      },\n      default: ['bulging', 'dizzy', 'eva', 'frame1', 'frame2', 'glow', 'happy', 'hearts', 'robocop', 'round', 'roundFrame01', 'roundFrame02', 'sensor', 'shade01']\n    },\n    face: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['round01', 'round02', 'square01', 'square02', 'square03', 'square04']\n      },\n      default: ['round01', 'round02', 'square01', 'square02', 'square03', 'square04']\n    },\n    mouth: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['bite', 'diagram', 'grill01', 'grill02', 'grill03', 'smile01', 'smile02', 'square01', 'square02']\n      },\n      default: ['bite', 'diagram', 'grill01', 'grill02', 'grill03', 'smile01', 'smile02', 'square01', 'square02']\n    },\n    mouthProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 100\n    },\n    sides: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['antenna01', 'antenna02', 'cables01', 'cables02', 'round', 'square', 'squareAssymetric']\n      },\n      default: ['antenna01', 'antenna02', 'cables01', 'cables02', 'round', 'square', 'squareAssymetric']\n    },\n    sidesProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 100\n    },\n    texture: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['camo01', 'camo02', 'circuits', 'dirty01', 'dirty02', 'dots', 'grunge01', 'grunge02']\n      },\n      default: ['camo01', 'camo02', 'circuits', 'dirty01', 'dirty02', 'dots', 'grunge01', 'grunge02']\n    },\n    textureProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 50\n    },\n    top: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['antenna', 'antennaCrooked', 'bulb01', 'glowingBulb01', 'glowingBulb02', 'horns', 'lights', 'pyramid', 'radar']\n      },\n      default: ['antenna', 'antennaCrooked', 'bulb01', 'glowingBulb01', 'glowingBulb02', 'horns', 'lights', 'pyramid', 'radar']\n    },\n    topProbability: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      default: 100\n    }\n  }\n};","map":{"version":3,"names":["schema","$schema","properties","baseColor","type","items","pattern","default","eyes","enum","face","mouth","mouthProbability","minimum","maximum","sides","sidesProbability","texture","textureProbability","top","topProbability"],"sources":["/Users/tommys/Desktop/ai14/frontend/node_modules/@dicebear/bottts/lib/schema.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/4nf3pyoOuM1U9Pa8M0cL6u\n */\nexport const schema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    properties: {\n        baseColor: {\n            type: 'array',\n            items: {\n                type: 'string',\n                pattern: '^(transparent|[a-fA-F0-9]{6})$',\n            },\n            default: [\n                'ffb300',\n                '1e88e5',\n                '546e7a',\n                '6d4c41',\n                '00acc1',\n                'f4511e',\n                '5e35b1',\n                '43a047',\n                '757575',\n                '3949ab',\n                '039be5',\n                '7cb342',\n                'c0ca33',\n                'fb8c00',\n                'd81b60',\n                '8e24aa',\n                'e53935',\n                '00897b',\n                'fdd835',\n            ],\n        },\n        eyes: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'bulging',\n                    'dizzy',\n                    'eva',\n                    'frame1',\n                    'frame2',\n                    'glow',\n                    'happy',\n                    'hearts',\n                    'robocop',\n                    'round',\n                    'roundFrame01',\n                    'roundFrame02',\n                    'sensor',\n                    'shade01',\n                ],\n            },\n            default: [\n                'bulging',\n                'dizzy',\n                'eva',\n                'frame1',\n                'frame2',\n                'glow',\n                'happy',\n                'hearts',\n                'robocop',\n                'round',\n                'roundFrame01',\n                'roundFrame02',\n                'sensor',\n                'shade01',\n            ],\n        },\n        face: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'round01',\n                    'round02',\n                    'square01',\n                    'square02',\n                    'square03',\n                    'square04',\n                ],\n            },\n            default: [\n                'round01',\n                'round02',\n                'square01',\n                'square02',\n                'square03',\n                'square04',\n            ],\n        },\n        mouth: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'bite',\n                    'diagram',\n                    'grill01',\n                    'grill02',\n                    'grill03',\n                    'smile01',\n                    'smile02',\n                    'square01',\n                    'square02',\n                ],\n            },\n            default: [\n                'bite',\n                'diagram',\n                'grill01',\n                'grill02',\n                'grill03',\n                'smile01',\n                'smile02',\n                'square01',\n                'square02',\n            ],\n        },\n        mouthProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 100,\n        },\n        sides: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'antenna01',\n                    'antenna02',\n                    'cables01',\n                    'cables02',\n                    'round',\n                    'square',\n                    'squareAssymetric',\n                ],\n            },\n            default: [\n                'antenna01',\n                'antenna02',\n                'cables01',\n                'cables02',\n                'round',\n                'square',\n                'squareAssymetric',\n            ],\n        },\n        sidesProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 100,\n        },\n        texture: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'camo01',\n                    'camo02',\n                    'circuits',\n                    'dirty01',\n                    'dirty02',\n                    'dots',\n                    'grunge01',\n                    'grunge02',\n                ],\n            },\n            default: [\n                'camo01',\n                'camo02',\n                'circuits',\n                'dirty01',\n                'dirty02',\n                'dots',\n                'grunge01',\n                'grunge02',\n            ],\n        },\n        textureProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 50,\n        },\n        top: {\n            type: 'array',\n            items: {\n                type: 'string',\n                enum: [\n                    'antenna',\n                    'antennaCrooked',\n                    'bulb01',\n                    'glowingBulb01',\n                    'glowingBulb02',\n                    'horns',\n                    'lights',\n                    'pyramid',\n                    'radar',\n                ],\n            },\n            default: [\n                'antenna',\n                'antennaCrooked',\n                'bulb01',\n                'glowingBulb01',\n                'glowingBulb02',\n                'horns',\n                'lights',\n                'pyramid',\n                'radar',\n            ],\n        },\n        topProbability: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            default: 100,\n        },\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}