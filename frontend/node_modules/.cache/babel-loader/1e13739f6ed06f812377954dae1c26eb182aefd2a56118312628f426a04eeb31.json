{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuizAnalytics.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Quiz/Teacher/QuizAnalytics.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getTeacherQuizDetails, getTeacherQuizAttempts } from '../../../services/api';\nimport { FaArrowLeft, FaChartBar, FaSpinner, FaUsers, FaCheckCircle, FaPercentage, FaQuestionCircle, FaRegListAlt } from 'react-icons/fa';\nimport '../../../styles/QuizComponents.css'; // Styles for analytics\nimport '../../../styles/TeacherDashboard.css'; // General dashboard styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizAnalytics() {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const [quizDetails, setQuizDetails] = useState(null);\n  const [attempts, setAttempts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // --- Helper to calculate overall and per-question stats ---\n  const calculateAnalytics = useCallback((quiz, studentAttempts) => {\n    if (!quiz || !quiz.questions || studentAttempts.length === 0) {\n      var _quiz$questions;\n      return {\n        averageScore: 0,\n        totalAttempts: studentAttempts.length,\n        completionRate: 0,\n        // Needs total assigned students for true rate\n        questionStats: (quiz === null || quiz === void 0 ? void 0 : (_quiz$questions = quiz.questions) === null || _quiz$questions === void 0 ? void 0 : _quiz$questions.map(q => ({\n          id: q.id,\n          text: q.question_text,\n          correctPercentage: 0,\n          totalAnswers: 0,\n          correctAnswers: 0\n        }))) || []\n      };\n    }\n    let totalScoreSum = 0;\n    const questionStatsMap = {};\n    quiz.questions.forEach(q => {\n      questionStatsMap[q.id] = {\n        id: q.id,\n        text: q.question_text,\n        type: q.question_type,\n        correctPercentage: 0,\n        totalAnswers: 0,\n        // Total students who answered this question\n        correctAnswers: 0 // Total students who answered this question correctly\n        // choices: q.choices // Could be used for most common wrong answers later\n      };\n    });\n    studentAttempts.forEach(attempt => {\n      if (attempt.score !== null) {\n        totalScoreSum += attempt.score;\n      }\n      // Assuming attempt.answers is an array of { question_id, is_correct, answer_text }\n      // This part depends on the structure returned by /api/teachers/quizzes/<quiz_id>/attempts\n      // For now, we'll assume the main attempt object has score, and we might need to fetch individual answer details if not directly available.\n      // Let's assume the backend `/api/teachers/quizzes/<quiz_id>/attempts` returns attempts with basic score,\n      // and we can't easily get per-question correctness without fetching each attempt's full details.\n      // So, per-question stats will be simplified for now.\n      // A more advanced version would fetch all StudentAnswer records for this quiz.\n    });\n\n    // For per-question stats, we'd ideally query StudentAnswer table aggregated by question_id for this quiz.\n    // This is a simplified placeholder if we don't have that endpoint yet.\n    // The current `getTeacherQuizAttempts` returns list of StudentQuizAttempt. We need details of their answers.\n    // This will be an area for future backend improvement. For now, focus on overall stats.\n\n    return {\n      averageScore: studentAttempts.length > 0 ? totalScoreSum / studentAttempts.length : 0,\n      totalAttempts: studentAttempts.length,\n      questionStats: Object.values(questionStatsMap) // Placeholder for now\n    };\n  }, []);\n  const [analyticsData, setAnalyticsData] = useState(null);\n  useEffect(() => {\n    if (!quizId) {\n      setError(\"Quiz ID is missing.\");\n      setIsLoading(false);\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError('');\n      try {\n        // Fetch quiz details (to get title, questions etc.)\n        const quizDetailsRes = await getTeacherQuizDetails(quizId);\n        setQuizDetails(quizDetailsRes.data);\n        console.log(\"Quiz Details for Analytics:\", quizDetailsRes.data);\n\n        // Fetch all student attempts for this quiz\n        const attemptsRes = await getTeacherQuizAttempts(quizId);\n        setAttempts(attemptsRes.data || []);\n        console.log(\"Quiz Attempts for Analytics:\", attemptsRes.data);\n\n        // Calculate analytics once both are fetched\n        if (quizDetailsRes.data && attemptsRes.data) {\n          setAnalyticsData(calculateAnalytics(quizDetailsRes.data, attemptsRes.data));\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(\"Error fetching quiz analytics data:\", err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Could not load quiz analytics.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [quizId, calculateAnalytics]); // Add calculateAnalytics to dependencies\n\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      return new Date(dateString).toLocaleString();\n    } // Full date and time\n    catch (e) {\n      return dateString;\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n        className: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 52\n      }, this), \" Loading Analytics...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/teacher/dashboard/quizzes\",\n          className: \"subtle-button back-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 97\n          }, this), \" Back to Quizzes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message error-message global-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n  if (!quizDetails || !analyticsData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No analytics data available for this quiz.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-analytics-page page-content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/teacher/dashboard/quizzes\",\n        className: \"subtle-button back-button\",\n        children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), \" Back to Quizzes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), \" Analytics for: \", quizDetails.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n          className: \"summary-card-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card-value\",\n          children: analyticsData.totalAttempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card-label\",\n          children: \"Total Attempts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(FaPercentage, {\n          className: \"summary-card-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card-value\",\n          children: [analyticsData.averageScore.toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card-label\",\n          children: \"Average Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget attempts-list-widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FaRegListAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), \" Student Attempts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), attempts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-list-message\",\n        children: \"No students have attempted this quiz yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"quiz-table analytics-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Qs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Submitted On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: attempts.map(attempt => {\n              var _attempt$correct_answ, _ref, _attempt$total_questi;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-label\": \"Student\",\n                  children: attempt.student_email || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-label\": \"Score\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `score-badge score-${attempt.score >= 70 ? 'high' : attempt.score >= 40 ? 'medium' : 'low'}`,\n                    children: attempt.score !== null ? `${attempt.score.toFixed(0)}%` : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-label\": \"Correct\",\n                  children: (_attempt$correct_answ = attempt.correct_answers) !== null && _attempt$correct_answ !== void 0 ? _attempt$correct_answ : '?'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-label\": \"Total Qs\",\n                  children: (_ref = (_attempt$total_questi = attempt.total_questions) !== null && _attempt$total_questi !== void 0 ? _attempt$total_questi : quizDetails.question_count) !== null && _ref !== void 0 ? _ref : '?'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-label\": \"Submitted\",\n                  children: formatDate(attempt.submitted_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this)]\n              }, attempt.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizAnalytics, \"aDqGEpN1opfMDFvMJNmjM+ojCLI=\", false, function () {\n  return [useParams];\n});\n_c = QuizAnalytics;\nexport default QuizAnalytics;\nvar _c;\n$RefreshReg$(_c, \"QuizAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Link","getTeacherQuizDetails","getTeacherQuizAttempts","FaArrowLeft","FaChartBar","FaSpinner","FaUsers","FaCheckCircle","FaPercentage","FaQuestionCircle","FaRegListAlt","jsxDEV","_jsxDEV","QuizAnalytics","_s","quizId","quizDetails","setQuizDetails","attempts","setAttempts","isLoading","setIsLoading","error","setError","calculateAnalytics","quiz","studentAttempts","questions","length","_quiz$questions","averageScore","totalAttempts","completionRate","questionStats","map","q","id","text","question_text","correctPercentage","totalAnswers","correctAnswers","totalScoreSum","questionStatsMap","forEach","type","question_type","attempt","score","Object","values","analyticsData","setAnalyticsData","fetchData","quizDetailsRes","data","console","log","attemptsRes","err","_err$response","_err$response$data","response","formatDate","dateString","Date","toLocaleString","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","title","toFixed","_attempt$correct_answ","_ref","_attempt$total_questi","student_email","correct_answers","total_questions","question_count","submitted_at","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuizAnalytics.js"],"sourcesContent":["// frontend/src/components/Quiz/Teacher/QuizAnalytics.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getTeacherQuizDetails, getTeacherQuizAttempts } from '../../../services/api';\nimport { FaArrowLeft, FaChartBar, FaSpinner, FaUsers, FaCheckCircle, FaPercentage, FaQuestionCircle, FaRegListAlt } from 'react-icons/fa';\nimport '../../../styles/QuizComponents.css'; // Styles for analytics\nimport '../../../styles/TeacherDashboard.css'; // General dashboard styles\n\nfunction QuizAnalytics() {\n    const { quizId } = useParams();\n    const [quizDetails, setQuizDetails] = useState(null);\n    const [attempts, setAttempts] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    // --- Helper to calculate overall and per-question stats ---\n    const calculateAnalytics = useCallback((quiz, studentAttempts) => {\n        if (!quiz || !quiz.questions || studentAttempts.length === 0) {\n            return {\n                averageScore: 0,\n                totalAttempts: studentAttempts.length,\n                completionRate: 0, // Needs total assigned students for true rate\n                questionStats: quiz?.questions?.map(q => ({ id: q.id, text: q.question_text, correctPercentage: 0, totalAnswers: 0, correctAnswers: 0 })) || []\n            };\n        }\n\n        let totalScoreSum = 0;\n        const questionStatsMap = {};\n        quiz.questions.forEach(q => {\n            questionStatsMap[q.id] = {\n                id: q.id,\n                text: q.question_text,\n                type: q.question_type,\n                correctPercentage: 0,\n                totalAnswers: 0, // Total students who answered this question\n                correctAnswers: 0, // Total students who answered this question correctly\n                // choices: q.choices // Could be used for most common wrong answers later\n            };\n        });\n\n        studentAttempts.forEach(attempt => {\n            if (attempt.score !== null) {\n                totalScoreSum += attempt.score;\n            }\n            // Assuming attempt.answers is an array of { question_id, is_correct, answer_text }\n            // This part depends on the structure returned by /api/teachers/quizzes/<quiz_id>/attempts\n            // For now, we'll assume the main attempt object has score, and we might need to fetch individual answer details if not directly available.\n            // Let's assume the backend `/api/teachers/quizzes/<quiz_id>/attempts` returns attempts with basic score,\n            // and we can't easily get per-question correctness without fetching each attempt's full details.\n            // So, per-question stats will be simplified for now.\n            // A more advanced version would fetch all StudentAnswer records for this quiz.\n        });\n\n        // For per-question stats, we'd ideally query StudentAnswer table aggregated by question_id for this quiz.\n        // This is a simplified placeholder if we don't have that endpoint yet.\n        // The current `getTeacherQuizAttempts` returns list of StudentQuizAttempt. We need details of their answers.\n        // This will be an area for future backend improvement. For now, focus on overall stats.\n\n        return {\n            averageScore: studentAttempts.length > 0 ? (totalScoreSum / studentAttempts.length) : 0,\n            totalAttempts: studentAttempts.length,\n            questionStats: Object.values(questionStatsMap) // Placeholder for now\n        };\n    }, []);\n\n\n    const [analyticsData, setAnalyticsData] = useState(null);\n\n    useEffect(() => {\n        if (!quizId) {\n            setError(\"Quiz ID is missing.\");\n            setIsLoading(false);\n            return;\n        }\n\n        const fetchData = async () => {\n            setIsLoading(true);\n            setError('');\n            try {\n                // Fetch quiz details (to get title, questions etc.)\n                const quizDetailsRes = await getTeacherQuizDetails(quizId);\n                setQuizDetails(quizDetailsRes.data);\n                console.log(\"Quiz Details for Analytics:\", quizDetailsRes.data);\n\n                // Fetch all student attempts for this quiz\n                const attemptsRes = await getTeacherQuizAttempts(quizId);\n                setAttempts(attemptsRes.data || []);\n                console.log(\"Quiz Attempts for Analytics:\", attemptsRes.data);\n\n                // Calculate analytics once both are fetched\n                if (quizDetailsRes.data && attemptsRes.data) {\n                    setAnalyticsData(calculateAnalytics(quizDetailsRes.data, attemptsRes.data));\n                }\n\n            } catch (err) {\n                console.error(\"Error fetching quiz analytics data:\", err);\n                setError(err.response?.data?.error || \"Could not load quiz analytics.\");\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchData();\n    }, [quizId, calculateAnalytics]); // Add calculateAnalytics to dependencies\n\n\n    const formatDate = (dateString) => {\n        if (!dateString) return 'N/A';\n        try { return new Date(dateString).toLocaleString(); } // Full date and time\n        catch (e) { return dateString; }\n    };\n\n\n    if (isLoading) {\n        return <div className=\"loading-fullscreen\"><FaSpinner className=\"spin\" /> Loading Analytics...</div>;\n    }\n    if (error) {\n        return (\n            <div className=\"page-content-wrapper\">\n                <div className=\"page-header\">\n                    <Link to=\"/teacher/dashboard/quizzes\" className='subtle-button back-button'><FaArrowLeft /> Back to Quizzes</Link>\n                </div>\n                <div className=\"message error-message global-message\">{error}</div>\n            </div>\n        );\n    }\n    if (!quizDetails || !analyticsData) {\n        return <div className=\"page-content-wrapper\"><p>No analytics data available for this quiz.</p></div>;\n    }\n\n\n    return (\n        <div className=\"quiz-analytics-page page-content-wrapper\">\n            <div className=\"page-header\">\n                <Link to=\"/teacher/dashboard/quizzes\" className='subtle-button back-button'>\n                    <FaArrowLeft /> Back to Quizzes\n                </Link>\n                <h2><FaChartBar /> Analytics for: {quizDetails.title}</h2>\n            </div>\n\n            {/* --- Summary Statistics --- */}\n            <div className=\"analytics-summary-cards\">\n                <div className=\"summary-card\">\n                    <FaUsers className=\"summary-card-icon\" />\n                    <div className=\"summary-card-value\">{analyticsData.totalAttempts}</div>\n                    <div className=\"summary-card-label\">Total Attempts</div>\n                </div>\n                <div className=\"summary-card\">\n                    <FaPercentage className=\"summary-card-icon\" />\n                    <div className=\"summary-card-value\">{analyticsData.averageScore.toFixed(1)}%</div>\n                    <div className=\"summary-card-label\">Average Score</div>\n                </div>\n                {/* Add more summary cards: e.g., Pass Rate (if defined), Most Difficult Question (later) */}\n            </div>\n\n            {/* --- List of Student Attempts --- */}\n            <div className=\"widget attempts-list-widget\">\n                <h3><FaRegListAlt/> Student Attempts</h3>\n                {attempts.length === 0 ? (\n                    <p className=\"empty-list-message\">No students have attempted this quiz yet.</p>\n                ) : (\n                    <div className=\"table-container\">\n                        <table className=\"quiz-table analytics-table\">\n                            <thead>\n                                <tr>\n                                    <th>Student Email</th>\n                                    <th>Score</th>\n                                    <th>Correct</th>\n                                    <th>Total Qs</th>\n                                    <th>Submitted On</th>\n                                    {/*<th>Actions</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {attempts.map(attempt => (\n                                    <tr key={attempt.id}>\n                                        <td data-label=\"Student\">{attempt.student_email || 'N/A'}</td>\n                                        <td data-label=\"Score\">\n                                            <span className={`score-badge score-${attempt.score >= 70 ? 'high' : attempt.score >= 40 ? 'medium' : 'low'}`}>\n                                                {attempt.score !== null ? `${attempt.score.toFixed(0)}%` : 'N/A'}\n                                            </span>\n                                        </td>\n                                        <td data-label=\"Correct\">{attempt.correct_answers ?? '?'}</td>\n                                        <td data-label=\"Total Qs\">{attempt.total_questions ?? quizDetails.question_count ?? '?'}</td>\n                                        <td data-label=\"Submitted\">{formatDate(attempt.submitted_at)}</td>\n                                        {/* <td data-label=\"Actions\">\n                                            <Link to={`/teacher/dashboard/attempts/${attempt.id}/details`} className=\"subtle-button\">View Details</Link>\n                                        </td> */}\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n            </div>\n\n            {/* --- Per-Question Statistics (Simplified for now) --- */}\n            {/* This section will need more backend work to be truly useful (aggregating all StudentAnswer records) */}\n            {/* <div className=\"widget question-stats-widget\">\n                <h3><FaQuestionCircle/> Question Performance (Overview)</h3>\n                {analyticsData.questionStats.length === 0 ? (\n                    <p>No question data available.</p>\n                ) : (\n                    <ul>\n                        {analyticsData.questionStats.map(qStat => (\n                            <li key={qStat.id}>\n                                <strong>Q: {qStat.text.substring(0,60)}...</strong> - Correct: {qStat.correctPercentage.toFixed(0)}%\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div> */}\n        </div>\n    );\n}\n\nexport default QuizAnalytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}