{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuizGeneratorAI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\nimport { generateQuizQuestionsAI, getMaterials } from '../../../services/api';\nimport { FaMagic, FaSpinner } from 'react-icons/fa'; // Removed FaBook as it was unused\nimport '../../../styles/QuizComponents.css'; // Ensure this path is correct for your CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizGeneratorAI({\n  onQuestionsGenerated,\n  showLoading,\n  hideLoading,\n  showError\n}) {\n  _s();\n  const [contextType, setContextType] = useState('material');\n  const [selectedMaterialId, setSelectedMaterialId] = useState('');\n  const [customContext, setCustomContext] = useState('');\n  const [numQuestions, setNumQuestions] = useState(5); // Default number of questions\n  const [difficulty, setDifficulty] = useState('medium'); // Default difficulty\n  const [materials, setMaterials] = useState([]);\n  const [isLoadingMaterials, setIsLoadingMaterials] = useState(false);\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  // Using useCallback for showError if passed down from parent that uses it in dependency array\n  const stableShowError = useCallback(showError, [showError]);\n  useEffect(() => {\n    if (contextType === 'material') {\n      setIsLoadingMaterials(true);\n      getMaterials().then(response => setMaterials(response.data || [])).catch(err => {\n        console.error(\"Error fetching materials for quiz generator:\", err);\n        stableShowError(\"Could not load materials list.\");\n        setMaterials([]);\n      }).finally(() => setIsLoadingMaterials(false));\n    }\n  }, [contextType, stableShowError]);\n  const handleGenerate = async () => {\n    let contextPayload = {};\n    if (contextType === 'text') {\n      if (!customContext.trim()) {\n        stableShowError(\"Please enter some context text for AI generation.\");\n        return;\n      }\n      contextPayload = {\n        context_text: customContext\n      };\n    } else {\n      // contextType === 'material'\n      if (!selectedMaterialId) {\n        stableShowError(\"Please select a material for AI generation.\");\n        return;\n      }\n      // No need to send material summary from here, backend handles full text via ID\n      contextPayload = {\n        material_id: selectedMaterialId\n      };\n    }\n    setIsGenerating(true);\n    if (showLoading) showLoading(\"Generating questions with AI...\");\n    const fullPayload = {\n      ...contextPayload,\n      // material_id OR context_text\n      num_questions: numQuestions,\n      difficulty: difficulty,\n      // Add difficulty to payload\n      question_types: [\"mcq\"] // You can make this dynamic later if needed\n    };\n    console.log(\"QuizGeneratorAI: Sending this payload to API:\", fullPayload);\n    try {\n      // Pass the single 'fullPayload' object\n      const response = await generateQuizQuestionsAI(fullPayload);\n      console.log(\"AI Generated Questions API Response:\", response);\n      if (response && response.data) {\n        onQuestionsGenerated(response.data);\n      } else {\n        throw new Error(\"AI response was empty or malformed.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"AI Quiz Generation failed:\", error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || \"AI failed to generate questions. Please check context or try again.\";\n      stableShowError(errorMsg);\n      onQuestionsGenerated([]); // Pass empty array on failure\n    } finally {\n      setIsGenerating(false);\n      if (hideLoading) hideLoading();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-generator-ai widget-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [/*#__PURE__*/_jsxDEV(FaMagic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), \" Generate Questions with AI\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quiz-gen-context-type\",\n          children: \"Context Source:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"quiz-gen-context-type\",\n          value: contextType,\n          onChange: e => setContextType(e.target.value),\n          disabled: isGenerating,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"material\",\n            children: \"From Uploaded Material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"From Custom Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), contextType === 'material' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quiz-gen-material-select\",\n          children: \"Select Material:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), isLoadingMaterials ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n            className: \"spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 32\n          }, this), \" Loading materials...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"quiz-gen-material-select\",\n          value: selectedMaterialId,\n          onChange: e => setSelectedMaterialId(e.target.value),\n          disabled: isGenerating || materials.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Material --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), materials.map(material => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: material.id,\n            children: material.name\n          }, material.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), materials.length === 0 && !isLoadingMaterials && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hint-text\",\n          children: \"No materials uploaded. Upload via \\\"Manage Materials\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), contextType === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quiz-gen-custom-context\",\n          children: \"Enter Context Text (for AI):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"quiz-gen-custom-context\",\n          rows: \"5\",\n          value: customContext,\n          onChange: e => setCustomContext(e.target.value),\n          placeholder: \"Paste or type the text the AI should use to create questions...\",\n          disabled: isGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group inline-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quiz-gen-num-questions\",\n          children: \"Number of Questions (1-15):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"quiz-gen-num-questions\",\n          value: numQuestions,\n          onChange: e => setNumQuestions(Math.max(1, Math.min(15, parseInt(e.target.value) || 1))),\n          min: \"1\",\n          max: \"15\" // Max as defined in backend\n          ,\n          disabled: isGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group inline-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quiz-gen-difficulty\",\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"quiz-gen-difficulty\",\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          disabled: isGenerating,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        className: \"button primary-button\",\n        disabled: isGenerating || contextType === 'material' && !selectedMaterialId || contextType === 'text' && !customContext.trim(),\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n            className: \"spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 39\n          }, this), \" Generating...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaMagic, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 91\n          }, this), \" Generate AI Questions\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizGeneratorAI, \"qGXN91OxrOfTrjLVWmeGi2WznNc=\");\n_c = QuizGeneratorAI;\nexport default QuizGeneratorAI;\nvar _c;\n$RefreshReg$(_c, \"QuizGeneratorAI\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","generateQuizQuestionsAI","getMaterials","FaMagic","FaSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGeneratorAI","onQuestionsGenerated","showLoading","hideLoading","showError","_s","contextType","setContextType","selectedMaterialId","setSelectedMaterialId","customContext","setCustomContext","numQuestions","setNumQuestions","difficulty","setDifficulty","materials","setMaterials","isLoadingMaterials","setIsLoadingMaterials","isGenerating","setIsGenerating","stableShowError","then","response","data","catch","err","console","error","finally","handleGenerate","contextPayload","trim","context_text","material_id","fullPayload","num_questions","question_types","log","Error","_error$response","_error$response$data","errorMsg","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","disabled","length","map","material","name","rows","placeholder","type","Math","max","min","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Teacher/QuizGeneratorAI.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\nimport { generateQuizQuestionsAI, getMaterials } from '../../../services/api';\nimport { FaMagic, FaSpinner } from 'react-icons/fa'; // Removed FaBook as it was unused\nimport '../../../styles/QuizComponents.css'; // Ensure this path is correct for your CSS\n\nfunction QuizGeneratorAI({ onQuestionsGenerated, showLoading, hideLoading, showError }) {\n    const [contextType, setContextType] = useState('material');\n    const [selectedMaterialId, setSelectedMaterialId] = useState('');\n    const [customContext, setCustomContext] = useState('');\n    const [numQuestions, setNumQuestions] = useState(5); // Default number of questions\n    const [difficulty, setDifficulty] = useState('medium'); // Default difficulty\n    const [materials, setMaterials] = useState([]);\n    const [isLoadingMaterials, setIsLoadingMaterials] = useState(false);\n    const [isGenerating, setIsGenerating] = useState(false);\n\n    // Using useCallback for showError if passed down from parent that uses it in dependency array\n    const stableShowError = useCallback(showError, [showError]);\n\n    useEffect(() => {\n        if (contextType === 'material') {\n            setIsLoadingMaterials(true);\n            getMaterials()\n                .then(response => setMaterials(response.data || []))\n                .catch(err => {\n                    console.error(\"Error fetching materials for quiz generator:\", err);\n                    stableShowError(\"Could not load materials list.\");\n                    setMaterials([]);\n                })\n                .finally(() => setIsLoadingMaterials(false));\n        }\n    }, [contextType, stableShowError]);\n\n    const handleGenerate = async () => {\n        let contextPayload = {};\n\n        if (contextType === 'text') {\n            if (!customContext.trim()) {\n                stableShowError(\"Please enter some context text for AI generation.\");\n                return;\n            }\n            contextPayload = { context_text: customContext };\n        } else { // contextType === 'material'\n            if (!selectedMaterialId) {\n                stableShowError(\"Please select a material for AI generation.\");\n                return;\n            }\n            // No need to send material summary from here, backend handles full text via ID\n            contextPayload = { material_id: selectedMaterialId };\n        }\n\n        setIsGenerating(true);\n        if (showLoading) showLoading(\"Generating questions with AI...\");\n\n        const fullPayload = {\n            ...contextPayload, // material_id OR context_text\n            num_questions: numQuestions,\n            difficulty: difficulty, // Add difficulty to payload\n            question_types: [\"mcq\"] // You can make this dynamic later if needed\n        };\n\n        console.log(\"QuizGeneratorAI: Sending this payload to API:\", fullPayload);\n\n        try {\n            // Pass the single 'fullPayload' object\n            const response = await generateQuizQuestionsAI(fullPayload);\n            console.log(\"AI Generated Questions API Response:\", response);\n            if (response && response.data) {\n                onQuestionsGenerated(response.data);\n            } else {\n                throw new Error(\"AI response was empty or malformed.\");\n            }\n        } catch (error) {\n            console.error(\"AI Quiz Generation failed:\", error);\n            const errorMsg = error.response?.data?.error || error.message || \"AI failed to generate questions. Please check context or try again.\";\n            stableShowError(errorMsg);\n            onQuestionsGenerated([]); // Pass empty array on failure\n        } finally {\n            setIsGenerating(false);\n            if (hideLoading) hideLoading();\n        }\n    };\n\n    return (\n        <div className=\"quiz-generator-ai widget-section\">\n            <h4><FaMagic /> Generate Questions with AI</h4>\n            <div className=\"generator-options\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"quiz-gen-context-type\">Context Source:</label>\n                    <select id=\"quiz-gen-context-type\" value={contextType} onChange={(e) => setContextType(e.target.value)} disabled={isGenerating}>\n                        <option value=\"material\">From Uploaded Material</option>\n                        <option value=\"text\">From Custom Text</option>\n                    </select>\n                </div>\n\n                {contextType === 'material' && (\n                    <div className=\"form-group\">\n                        <label htmlFor=\"quiz-gen-material-select\">Select Material:</label>\n                        {isLoadingMaterials ? (\n                            <p><FaSpinner className=\"spin\"/> Loading materials...</p>\n                        ) : (\n                            <select\n                                id=\"quiz-gen-material-select\"\n                                value={selectedMaterialId}\n                                onChange={(e) => setSelectedMaterialId(e.target.value)}\n                                disabled={isGenerating || materials.length === 0}\n                            >\n                                <option value=\"\">-- Select Material --</option>\n                                {materials.map(material => (\n                                    <option key={material.id} value={material.id}>\n                                        {material.name}\n                                    </option>\n                                ))}\n                            </select>\n                        )}\n                         {materials.length === 0 && !isLoadingMaterials && <p className='hint-text'>No materials uploaded. Upload via \"Manage Materials\".</p>}\n                    </div>\n                )}\n\n                {contextType === 'text' && (\n                    <div className=\"form-group\">\n                        <label htmlFor=\"quiz-gen-custom-context\">Enter Context Text (for AI):</label>\n                        <textarea\n                            id=\"quiz-gen-custom-context\"\n                            rows=\"5\"\n                            value={customContext}\n                            onChange={(e) => setCustomContext(e.target.value)}\n                            placeholder=\"Paste or type the text the AI should use to create questions...\"\n                            disabled={isGenerating}\n                        />\n                    </div>\n                )}\n\n                <div className=\"form-group inline-group\">\n                    <label htmlFor=\"quiz-gen-num-questions\">Number of Questions (1-15):</label>\n                    <input\n                        type=\"number\"\n                        id=\"quiz-gen-num-questions\"\n                        value={numQuestions}\n                        onChange={(e) => setNumQuestions(Math.max(1, Math.min(15, parseInt(e.target.value) || 1)))}\n                        min=\"1\"\n                        max=\"15\" // Max as defined in backend\n                        disabled={isGenerating}\n                    />\n                </div>\n                <div className=\"form-group inline-group\">\n                     <label htmlFor=\"quiz-gen-difficulty\">Difficulty:</label>\n                     <select id=\"quiz-gen-difficulty\" value={difficulty} onChange={(e) => setDifficulty(e.target.value)} disabled={isGenerating}>\n                         <option value=\"easy\">Easy</option>\n                         <option value=\"medium\">Medium</option>\n                         <option value=\"hard\">Hard</option>\n                     </select>\n                 </div>\n\n                <button onClick={handleGenerate} className=\"button primary-button\" disabled={isGenerating || (contextType === 'material' && !selectedMaterialId) || (contextType==='text' && !customContext.trim())}>\n                    {isGenerating ? <><FaSpinner className=\"spin\" /> Generating...</> : <><FaMagic /> Generate AI Questions</>}\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default QuizGeneratorAI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}