{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Student/QuizTaker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { takeStudentQuiz, submitStudentQuiz } from '../../../services/api';\nimport { FaSpinner, FaPaperPlane, FaExclamationCircle, FaRegCircle, FaCheckCircle } from 'react-icons/fa';\nimport '../../../styles/StudentDashboard.css';\nimport '../../../styles/QuizComponents.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizTaker() {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState(null);\n  const [studentAnswers, setStudentAnswers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const pageTopRef = useRef(null);\n  const showError = useCallback(msg => setError(msg), []);\n  useEffect(() => {\n    const fetchQuizToTake = async () => {\n      if (!quizId) {\n        showError(\"Quiz ID is missing.\");\n        setIsLoading(false);\n        return;\n      }\n      setIsLoading(true);\n      setError('');\n      try {\n        const response = await takeStudentQuiz(quizId);\n        if (response.data && response.data.questions) {\n          setQuizData(response.data);\n          // initial answers (restore from localStorage if present)\n          const saved = localStorage.getItem(`quiz_${quizId}_answers`);\n          if (saved) {\n            setStudentAnswers(JSON.parse(saved));\n          } else {\n            const initial = {};\n            response.data.questions.forEach(q => {\n              initial[q.id] = null;\n            });\n            setStudentAnswers(initial);\n          }\n        } else {\n          throw new Error(\"Quiz data or questions missing in API response.\");\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(\"Error fetching quiz for student:\", err);\n        showError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Could not load the quiz. It might not be available or an error occurred.\");\n        setQuizData(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuizToTake();\n  }, [quizId, showError]);\n\n  // autosave answers\n  useEffect(() => {\n    if (quizId) localStorage.setItem(`quiz_${quizId}_answers`, JSON.stringify(studentAnswers));\n  }, [quizId, studentAnswers]);\n\n  // confirm on unload if not submitted\n  useEffect(() => {\n    const beforeUnload = e => {\n      if (!isSubmitting) {\n        e.preventDefault();\n        e.returnValue = '';\n      }\n    };\n    window.addEventListener('beforeunload', beforeUnload);\n    return () => window.removeEventListener('beforeunload', beforeUnload);\n  }, [isSubmitting]);\n  const handleAnswerSelect = (questionId, choiceId) => {\n    setStudentAnswers(prev => ({\n      ...prev,\n      [questionId]: choiceId\n    }));\n  };\n  const handleSubmitQuiz = async () => {\n    const unanswered = quizData.questions.filter(q => studentAnswers[q.id] === null || studentAnswers[q.id] === undefined);\n    if (unanswered.length > 0) {\n      if (!window.confirm(`You have ${unanswered.length} unanswered question(s). Are you sure you want to submit?`)) return;\n    }\n    setIsSubmitting(true);\n    setError('');\n\n    // transform to expected payload: choice_text\n    const payload = {};\n    for (const question of quizData.questions) {\n      const selectedChoiceId = studentAnswers[question.id];\n      if (selectedChoiceId) {\n        const selectedChoice = question.choices.find(c => c.id === selectedChoiceId);\n        payload[question.id] = selectedChoice ? selectedChoice.choice_text : null;\n      } else {\n        payload[question.id] = null;\n      }\n    }\n    try {\n      const response = await submitStudentQuiz(quizId, payload);\n      // gamify: +20 XP per quiz submit\n      const xp = parseInt(localStorage.getItem('student_xp') || '0', 10) + 20;\n      localStorage.setItem('student_xp', String(xp));\n      localStorage.setItem('student_last_active', new Date().toISOString().slice(0, 10));\n      localStorage.removeItem(`quiz_${quizId}_answers`);\n      if (response.data && response.data.id) navigate(`/student/dashboard/attempts/${response.data.id}`);else navigate('/student/dashboard');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Error submitting quiz:\", err);\n      showError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Failed to submit your answers. Please try again.\");\n      setIsSubmitting(false);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n      className: \"spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 61\n    }, this), \" Loading Quiz...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 25\n  }, this);\n  if (error && !quizData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper quiz-taker-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message error-message global-message\",\n        children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Error Loading Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/student/dashboard\",\n            className: \"button subtle-button\",\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quizData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quiz data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 63\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 25\n  }, this);\n  const total = quizData.questions.length;\n  const answeredCount = Object.values(studentAnswers).filter(v => v !== null && v !== undefined).length;\n  const progressPct = Math.round(answeredCount / total * 100);\n  const scrollToQ = qid => {\n    const el = document.getElementById(`q_${qid}`);\n    if (el) el.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-taker-page page-content-wrapper\",\n    ref: pageTopRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quizData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fill\",\n            style: {\n              width: `${progressPct}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: [answeredCount, \"/\", total, \" answered\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), quizData.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quiz-description-taker\",\n      children: quizData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message error-message global-message\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-jump-nav widget\",\n      children: quizData.questions.map((q, idx) => {\n        const done = !!studentAnswers[q.id];\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `q-dot ${done ? 'done' : ''}`,\n          title: `Go to question ${idx + 1}`,\n          onClick: () => scrollToQ(q.id),\n          children: idx + 1\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmitQuiz();\n      },\n      children: [quizData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `q_${question.id}`,\n        className: \"quiz-question-block widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text-taker\",\n          children: question.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), question.question_type === 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choices-group\",\n          children: question.choices.map(choice => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `choice-label ${studentAnswers[question.id] === choice.id ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: choice.id,\n              checked: studentAnswers[question.id] === choice.id,\n              onChange: () => handleAnswerSelect(question.id, choice.id),\n              className: \"choice-radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), studentAnswers[question.id] === choice.id ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              className: \"choice-icon selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 66\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegCircle, {\n              className: \"choice-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 118\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"choice-text\",\n              children: choice.choice_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this)]\n          }, choice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-submit-area sticky\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button primary-button large-button\",\n          disabled: isSubmitting,\n          children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: \"spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 31\n            }, this), \" Submitting...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 83\n            }, this), \" Submit Answers\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizTaker, \"Q6tdQGYrUhk3r3aEvbcVjH864VE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizTaker;\nexport default QuizTaker;\nvar _c;\n$RefreshReg$(_c, \"QuizTaker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","Link","takeStudentQuiz","submitStudentQuiz","FaSpinner","FaPaperPlane","FaExclamationCircle","FaRegCircle","FaCheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizTaker","_s","quizId","navigate","quizData","setQuizData","studentAnswers","setStudentAnswers","isLoading","setIsLoading","error","setError","isSubmitting","setIsSubmitting","pageTopRef","showError","msg","fetchQuizToTake","response","data","questions","saved","localStorage","getItem","JSON","parse","initial","forEach","q","id","Error","err","_err$response","_err$response$data","console","setItem","stringify","beforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","handleAnswerSelect","questionId","choiceId","prev","handleSubmitQuiz","unanswered","filter","undefined","length","confirm","payload","question","selectedChoiceId","selectedChoice","choices","find","c","choice_text","xp","parseInt","String","Date","toISOString","slice","removeItem","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","to","total","answeredCount","Object","values","v","progressPct","Math","round","scrollToQ","qid","el","document","getElementById","scrollIntoView","behavior","block","ref","title","style","width","description","marginBottom","map","idx","done","type","onClick","onSubmit","index","question_text","question_type","choice","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Student/QuizTaker.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { takeStudentQuiz, submitStudentQuiz } from '../../../services/api';\nimport { FaSpinner, FaPaperPlane, FaExclamationCircle, FaRegCircle, FaCheckCircle } from 'react-icons/fa';\nimport '../../../styles/StudentDashboard.css';\nimport '../../../styles/QuizComponents.css';\n\nfunction QuizTaker() {\n  const { quizId } = useParams();\n  const navigate = useNavigate();\n\n  const [quizData, setQuizData] = useState(null);\n  const [studentAnswers, setStudentAnswers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const pageTopRef = useRef(null);\n\n  const showError = useCallback((msg) => setError(msg), []);\n\n  useEffect(() => {\n    const fetchQuizToTake = async () => {\n      if (!quizId) { showError(\"Quiz ID is missing.\"); setIsLoading(false); return; }\n      setIsLoading(true); setError('');\n      try {\n        const response = await takeStudentQuiz(quizId);\n        if (response.data && response.data.questions) {\n          setQuizData(response.data);\n          // initial answers (restore from localStorage if present)\n          const saved = localStorage.getItem(`quiz_${quizId}_answers`);\n          if (saved) {\n            setStudentAnswers(JSON.parse(saved));\n          } else {\n            const initial = {};\n            response.data.questions.forEach(q => { initial[q.id] = null; });\n            setStudentAnswers(initial);\n          }\n        } else {\n          throw new Error(\"Quiz data or questions missing in API response.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching quiz for student:\", err);\n        showError(err.response?.data?.error || \"Could not load the quiz. It might not be available or an error occurred.\");\n        setQuizData(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuizToTake();\n  }, [quizId, showError]);\n\n  // autosave answers\n  useEffect(() => {\n    if (quizId) localStorage.setItem(`quiz_${quizId}_answers`, JSON.stringify(studentAnswers));\n  }, [quizId, studentAnswers]);\n\n  // confirm on unload if not submitted\n  useEffect(() => {\n    const beforeUnload = (e) => {\n      if (!isSubmitting) {\n        e.preventDefault();\n        e.returnValue = '';\n      }\n    };\n    window.addEventListener('beforeunload', beforeUnload);\n    return () => window.removeEventListener('beforeunload', beforeUnload);\n  }, [isSubmitting]);\n\n  const handleAnswerSelect = (questionId, choiceId) => {\n    setStudentAnswers(prev => ({ ...prev, [questionId]: choiceId }));\n  };\n\n  const handleSubmitQuiz = async () => {\n    const unanswered = quizData.questions.filter(q => studentAnswers[q.id] === null || studentAnswers[q.id] === undefined);\n    if (unanswered.length > 0) {\n      if (!window.confirm(`You have ${unanswered.length} unanswered question(s). Are you sure you want to submit?`)) return;\n    }\n\n    setIsSubmitting(true); setError('');\n\n    // transform to expected payload: choice_text\n    const payload = {};\n    for (const question of quizData.questions) {\n      const selectedChoiceId = studentAnswers[question.id];\n      if (selectedChoiceId) {\n        const selectedChoice = question.choices.find(c => c.id === selectedChoiceId);\n        payload[question.id] = selectedChoice ? selectedChoice.choice_text : null;\n      } else {\n        payload[question.id] = null;\n      }\n    }\n\n    try {\n      const response = await submitStudentQuiz(quizId, payload);\n      // gamify: +20 XP per quiz submit\n      const xp = parseInt(localStorage.getItem('student_xp') || '0', 10) + 20;\n      localStorage.setItem('student_xp', String(xp));\n      localStorage.setItem('student_last_active', new Date().toISOString().slice(0,10));\n\n      localStorage.removeItem(`quiz_${quizId}_answers`);\n      if (response.data && response.data.id) navigate(`/student/dashboard/attempts/${response.data.id}`);\n      else navigate('/student/dashboard');\n    } catch (err) {\n      console.error(\"Error submitting quiz:\", err);\n      showError(err.response?.data?.error || \"Failed to submit your answers. Please try again.\");\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) return <div className=\"loading-fullscreen\"><FaSpinner className=\"spin\" /> Loading Quiz...</div>;\n\n  if (error && !quizData) {\n    return (\n      <div className=\"page-content-wrapper quiz-taker-error\">\n        <div className=\"message error-message global-message\">\n          <FaExclamationCircle size={24} />\n          <div>\n            <h4>Error Loading Quiz</h4>\n            <p>{error}</p>\n            <Link to=\"/student/dashboard\" className='button subtle-button'>Back to Dashboard</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  if (!quizData) return <div className=\"page-content-wrapper\"><p>No quiz data available.</p></div>;\n\n  const total = quizData.questions.length;\n  const answeredCount = Object.values(studentAnswers).filter(v => v !== null && v !== undefined).length;\n  const progressPct = Math.round((answeredCount / total) * 100);\n\n  const scrollToQ = (qid) => {\n    const el = document.getElementById(`q_${qid}`);\n    if (el) el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  };\n\n  return (\n    <div className=\"quiz-taker-page page-content-wrapper\" ref={pageTopRef}>\n      <div className=\"page-header\">\n        <h2>{quizData.title}</h2>\n        <div className=\"quiz-progress\">\n          <div className=\"bar\"><div className=\"fill\" style={{ width: `${progressPct}%` }} /></div>\n          <span className=\"label\">{answeredCount}/{total} answered</span>\n        </div>\n      </div>\n      {quizData.description && <p className=\"quiz-description-taker\">{quizData.description}</p>}\n\n      {error && <div className=\"message error-message global-message\" style={{marginBottom: '1rem'}}>{error}</div>}\n\n      {/* jump nav */}\n      <div className=\"question-jump-nav widget\">\n        {quizData.questions.map((q, idx) => {\n          const done = !!studentAnswers[q.id];\n          return (\n            <button\n              key={q.id}\n              type=\"button\"\n              className={`q-dot ${done ? 'done' : ''}`}\n              title={`Go to question ${idx+1}`}\n              onClick={() => scrollToQ(q.id)}\n            >\n              {idx+1}\n            </button>\n          );\n        })}\n      </div>\n\n      <form onSubmit={(e) => { e.preventDefault(); handleSubmitQuiz(); }}>\n        {quizData.questions.map((question, index) => (\n          <div key={question.id} id={`q_${question.id}`} className=\"quiz-question-block widget\">\n            <h4>Question {index + 1}</h4>\n            <p className=\"question-text-taker\">{question.question_text}</p>\n\n            {question.question_type === 'mcq' && (\n              <div className=\"choices-group\">\n                {question.choices.map(choice => (\n                  <label\n                    key={choice.id}\n                    className={`choice-label ${studentAnswers[question.id] === choice.id ? 'selected' : ''}`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.id}`}\n                      value={choice.id}\n                      checked={studentAnswers[question.id] === choice.id}\n                      onChange={() => handleAnswerSelect(question.id, choice.id)}\n                      className=\"choice-radio\"\n                    />\n                    {studentAnswers[question.id] === choice.id ? <FaCheckCircle className=\"choice-icon selected\"/> : <FaRegCircle className=\"choice-icon\"/>}\n                    <span className=\"choice-text\">{choice.choice_text}</span>\n                  </label>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n\n        <div className=\"quiz-submit-area sticky\">\n          <button type=\"submit\" className=\"button primary-button large-button\" disabled={isSubmitting}>\n            {isSubmitting ? <><FaSpinner className=\"spin\" /> Submitting...</> : <><FaPaperPlane /> Submit Answers</>}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default QuizTaker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}