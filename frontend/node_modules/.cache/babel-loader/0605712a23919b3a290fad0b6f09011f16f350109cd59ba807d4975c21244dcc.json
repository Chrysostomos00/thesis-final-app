{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Dashboard/PromptListForModal.js\";\n// frontend/src/components/Dashboard/PromptListForModal.js\nimport React from 'react';\nimport { FaSpinner, FaEye, FaEyeSlash } from 'react-icons/fa';\n// Path for shared styles (assuming PromptWorkshop.css or SavedPrompts.css has relevant styles)\nimport '../../styles/SavedPrompts.css'; // Contains .prompt-list styles\nimport '../../styles/Modal.css'; // For modal specific overrides if any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptListForModal({\n  prompts,\n  onLoadPrompt,\n  isLoading,\n  currentPromptId,\n  showError\n}) {\n  // Added showError\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-items\",\n      style: {\n        minHeight: '200px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n        className: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), \" Loading saved assistants...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n  if (!prompts || prompts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-list-message\",\n      style: {\n        margin: '1rem 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No AI assistants have been saved yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      return new Date(dateString).toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (e) {\n      return dateString;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-list-modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.9em',\n        color: 'var(--text-color-secondary)',\n        marginBottom: '1rem'\n      },\n      children: \"Select an assistant to load its configuration into the workshop.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"prompt-list\",\n      children: [\" \", prompts.map(prompt => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `prompt-item ${currentPromptId === prompt.id ? 'selected' : ''}`,\n        onClick: () => {\n          if (prompt.id === currentPromptId) {\n            if (showError) showError(\"This assistant is already loaded.\"); // Use showError if passed\n            else console.warn(\"This assistant is already loaded.\");\n            return;\n          }\n          onLoadPrompt(prompt);\n        },\n        title: `Load: ${prompt.name}\\nDescription: ${prompt.description || 'N/A'}`,\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-info\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"prompt-name\",\n            children: prompt.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), prompt.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"prompt-description-preview\",\n            children: prompt.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"prompt-date\",\n            children: [\"Updated: \", formatDate(prompt.updated_at)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-visibility-modal\",\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.3em',\n            fontSize: '0.85em',\n            color: prompt.is_public ? 'var(--success-color)' : 'var(--text-color-muted)'\n          },\n          children: [prompt.is_public ? /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: prompt.is_public ? 'Public' : 'Private'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, prompt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = PromptListForModal;\nexport default PromptListForModal;\nvar _c;\n$RefreshReg$(_c, \"PromptListForModal\");","map":{"version":3,"names":["React","FaSpinner","FaEye","FaEyeSlash","jsxDEV","_jsxDEV","PromptListForModal","prompts","onLoadPrompt","isLoading","currentPromptId","showError","className","style","minHeight","display","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","margin","formatDate","dateString","Date","toLocaleDateString","undefined","year","month","day","e","fontSize","color","marginBottom","map","prompt","id","onClick","console","warn","title","name","description","cursor","updated_at","gap","is_public","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Dashboard/PromptListForModal.js"],"sourcesContent":["// frontend/src/components/Dashboard/PromptListForModal.js\nimport React from 'react';\nimport { FaSpinner, FaEye, FaEyeSlash } from 'react-icons/fa';\n// Path for shared styles (assuming PromptWorkshop.css or SavedPrompts.css has relevant styles)\nimport '../../styles/SavedPrompts.css'; // Contains .prompt-list styles\nimport '../../styles/Modal.css'; // For modal specific overrides if any\n\nfunction PromptListForModal({ prompts, onLoadPrompt, isLoading, currentPromptId, showError }) { // Added showError\n    if (isLoading) {\n        return (\n            <div className=\"loading-items\" style={{minHeight: '200px', display:'flex', alignItems:'center', justifyContent:'center'}}>\n                <FaSpinner className=\"spin\" /> Loading saved assistants...\n            </div>\n        );\n    }\n\n    if (!prompts || prompts.length === 0) {\n        return (\n             <div className=\"empty-list-message\" style={{ margin: '1rem 0' }}>\n                <p>No AI assistants have been saved yet.</p>\n             </div>\n        );\n    }\n\n    const formatDate = (dateString) => {\n         if (!dateString) return 'N/A';\n         try { return new Date(dateString).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' }); }\n         catch (e) { return dateString; }\n    };\n\n    return (\n        <div className=\"prompt-list-modal-content\">\n            <p style={{fontSize: '0.9em', color: 'var(--text-color-secondary)', marginBottom: '1rem'}}>\n                Select an assistant to load its configuration into the workshop.\n            </p>\n            <ul className=\"prompt-list\"> {/* Reuse existing style */}\n                {prompts.map((prompt) => (\n                    <li\n                        key={prompt.id}\n                        className={`prompt-item ${currentPromptId === prompt.id ? 'selected' : ''}`}\n                        onClick={() => {\n                            if (prompt.id === currentPromptId) {\n                                if(showError) showError(\"This assistant is already loaded.\"); // Use showError if passed\n                                else console.warn(\"This assistant is already loaded.\");\n                                return;\n                            }\n                            onLoadPrompt(prompt);\n                        }}\n                        title={`Load: ${prompt.name}\\nDescription: ${prompt.description || 'N/A'}`}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <div className=\"prompt-info\"> {/* Style defined in SavedPrompts.css */}\n                            <span className=\"prompt-name\">{prompt.name}</span>\n                            {prompt.description && <p className=\"prompt-description-preview\">{prompt.description}</p>}\n                            <span className=\"prompt-date\">Updated: {formatDate(prompt.updated_at)}</span>\n                        </div>\n                        <div className=\"prompt-visibility-modal\" style={{display: 'flex', alignItems: 'center', gap: '0.3em', fontSize: '0.85em', color: prompt.is_public ? 'var(--success-color)' : 'var(--text-color-muted)'}}>\n                             {prompt.is_public ? <FaEye /> : <FaEyeSlash />}\n                             <span>{prompt.is_public ? 'Public' : 'Private'}</span>\n                        </div>\n                        {/* No edit/delete/toggle actions in modal context */}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\nexport default PromptListForModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}