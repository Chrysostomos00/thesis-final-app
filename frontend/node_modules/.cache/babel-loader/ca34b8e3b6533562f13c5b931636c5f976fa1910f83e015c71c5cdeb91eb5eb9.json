{"ast":null,"code":"var _jsxFileName = \"/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Student/QuizTaker.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Quiz/Student/QuizTaker.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { takeStudentQuiz, submitStudentQuiz } from '../../../services/api';\nimport { FaSpinner, FaPaperPlane, FaExclamationCircle, FaRegCircle, FaCheckCircle } from 'react-icons/fa';\n// Θα χρειαστείς ένα CSS αρχείο για αυτό, μπορείς να το προσθέσεις στο StudentDashboard.css ή ένα νέο QuizComponentsStudent.css\nimport '../../../styles/StudentDashboard.css'; // Or a more specific QuizTaker.css\nimport '../../../styles/QuizComponents.css'; // If some styles are shared\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizTaker() {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState(null); // Will hold { title, description, questions: [{id, question_text, choices: [{id, choice_text}]}] }\n  const [studentAnswers, setStudentAnswers] = useState({}); // Object to store answers: { questionId: choiceId }\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const showError = useCallback(msg => setError(msg), []);\n  useEffect(() => {\n    const fetchQuizToTake = async () => {\n      if (!quizId) {\n        showError(\"Quiz ID is missing.\");\n        setIsLoading(false);\n        return;\n      }\n      console.log(`QuizTaker: Fetching quiz ${quizId} for student to take.`);\n      setIsLoading(true);\n      setError('');\n      try {\n        const response = await takeStudentQuiz(quizId);\n        console.log(\"QuizTaker: Fetched quiz data:\", response.data);\n        if (response.data && response.data.questions) {\n          setQuizData(response.data);\n          // Initialize studentAnswers state\n          const initialAnswers = {};\n          response.data.questions.forEach(q => {\n            initialAnswers[q.id] = null; // No answer selected initially for MCQs\n          });\n          setStudentAnswers(initialAnswers);\n        } else {\n          throw new Error(\"Quiz data or questions missing in API response.\");\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(\"Error fetching quiz for student:\", err);\n        showError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Could not load the quiz. It might not be available or an error occurred.\");\n        setQuizData(null); // Clear quiz data on error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuizToTake();\n  }, [quizId, showError]);\n  const handleAnswerSelect = (questionId, choiceId) => {\n    setStudentAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: choiceId\n    }));\n  };\n  const handleSubmitQuiz = async () => {\n    // Check if all questions are answered (optional, depends on requirements)\n    const unansweredQuestions = quizData.questions.filter(q => studentAnswers[q.id] === null || studentAnswers[q.id] === undefined);\n    if (unansweredQuestions.length > 0) {\n      if (!window.confirm(`You have ${unansweredQuestions.length} unanswered question(s). Are you sure you want to submit?`)) {\n        return;\n      }\n    }\n    setIsSubmitting(true);\n    setError('');\n    console.log(\"Submitting answers:\", studentAnswers);\n\n    // The backend expects { question_id: \"answer_text_or_choice_id\", ... }\n    // For MCQs, our studentAnswers stores choiceId, but backend might expect choice_text.\n    // Let's adjust to send choice_text if that's what the backend grading needs.\n    // If backend grades based on choice ID, then studentAnswers is fine.\n    // For now, assuming studentAnswers stores choice_text (what student clicks on).\n    // Revisit this based on backend grading logic for `submit_quiz_answers`.\n    // For the current backend, it expects the *choice_text* for MCQ grading.\n    const payload = {};\n    for (const question of quizData.questions) {\n      const selectedChoiceId = studentAnswers[question.id];\n      if (selectedChoiceId) {\n        const selectedChoice = question.choices.find(c => c.id === selectedChoiceId);\n        payload[question.id] = selectedChoice ? selectedChoice.choice_text : null;\n      } else {\n        payload[question.id] = null; // Or an empty string for unanswered\n      }\n    }\n    console.log(\"Payload to submit:\", payload);\n    try {\n      const response = await submitStudentQuiz(quizId, payload);\n      console.log(\"Quiz submission response:\", response.data);\n\n      // --- NAVIGATE TO RESULTS PAGE ---\n      if (response.data && response.data.id) {\n        // response.data should be the attempt object\n        navigate(`/student/dashboard/attempts/${response.data.id}`);\n      } else {\n        // Fallback or error handling if attempt ID is not returned\n        showError(\"Quiz submitted, but could not load results page automatically.\");\n        navigate('/student/dashboard'); // Or stay on page and show score\n      }\n      // --- END NAVIGATION ---\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Error submitting quiz:\", err);\n      showError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Failed to submit your answers. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n        className: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 52\n      }, this), \" Loading Quiz...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }, this);\n  }\n  if (error && !quizData) {\n    // Show prominent error if quiz failed to load entirely\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper quiz-taker-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message error-message global-message\",\n        children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Error Loading Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/student/dashboard\",\n            className: \"button subtle-button\",\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n  if (!quizData) {\n    // Should be caught by isLoading or error, but as a fallback\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No quiz data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-taker-page page-content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quizData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), quizData.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quiz-description-taker\",\n      children: quizData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 38\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message error-message global-message\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmitQuiz();\n      },\n      children: [quizData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question-block widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text-taker\",\n          children: question.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), question.question_type === 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choices-group\",\n          children: question.choices.map(choice => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `choice-label ${studentAnswers[question.id] === choice.id ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: choice.id,\n              checked: studentAnswers[question.id] === choice.id,\n              onChange: () => handleAnswerSelect(question.id, choice.id),\n              className: \"choice-radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 41\n            }, this), studentAnswers[question.id] === choice.id ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              className: \"choice-icon selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 86\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegCircle, {\n              className: \"choice-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"choice-text\",\n              children: choice.choice_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }, this)]\n          }, choice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-submit-area\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button primary-button large-button\",\n          disabled: isSubmitting,\n          children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: \"spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 43\n            }, this), \" Submitting...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 95\n            }, this), \" Submit Answers\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizTaker, \"4raEWnkRyDXahUFANGPSoFembpI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizTaker;\nexport default QuizTaker;\nvar _c;\n$RefreshReg$(_c, \"QuizTaker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","Link","takeStudentQuiz","submitStudentQuiz","FaSpinner","FaPaperPlane","FaExclamationCircle","FaRegCircle","FaCheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizTaker","_s","quizId","navigate","quizData","setQuizData","studentAnswers","setStudentAnswers","isLoading","setIsLoading","error","setError","isSubmitting","setIsSubmitting","showError","msg","fetchQuizToTake","console","log","response","data","questions","initialAnswers","forEach","q","id","Error","err","_err$response","_err$response$data","handleAnswerSelect","questionId","choiceId","prevAnswers","handleSubmitQuiz","unansweredQuestions","filter","undefined","length","window","confirm","payload","question","selectedChoiceId","selectedChoice","choices","find","c","choice_text","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","to","title","description","style","marginBottom","onSubmit","e","preventDefault","map","index","question_text","question_type","choice","type","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/tommys/Desktop/ai14/frontend/src/components/Quiz/Student/QuizTaker.js"],"sourcesContent":["// frontend/src/components/Quiz/Student/QuizTaker.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { takeStudentQuiz, submitStudentQuiz } from '../../../services/api';\nimport { FaSpinner, FaPaperPlane, FaExclamationCircle, FaRegCircle, FaCheckCircle } from 'react-icons/fa';\n// Θα χρειαστείς ένα CSS αρχείο για αυτό, μπορείς να το προσθέσεις στο StudentDashboard.css ή ένα νέο QuizComponentsStudent.css\nimport '../../../styles/StudentDashboard.css'; // Or a more specific QuizTaker.css\nimport '../../../styles/QuizComponents.css';   // If some styles are shared\n\nfunction QuizTaker() {\n    const { quizId } = useParams();\n    const navigate = useNavigate();\n\n    const [quizData, setQuizData] = useState(null); // Will hold { title, description, questions: [{id, question_text, choices: [{id, choice_text}]}] }\n    const [studentAnswers, setStudentAnswers] = useState({}); // Object to store answers: { questionId: choiceId }\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const showError = useCallback((msg) => setError(msg), []);\n\n    useEffect(() => {\n        const fetchQuizToTake = async () => {\n            if (!quizId) {\n                showError(\"Quiz ID is missing.\");\n                setIsLoading(false);\n                return;\n            }\n            console.log(`QuizTaker: Fetching quiz ${quizId} for student to take.`);\n            setIsLoading(true);\n            setError('');\n            try {\n                const response = await takeStudentQuiz(quizId);\n                console.log(\"QuizTaker: Fetched quiz data:\", response.data);\n                if (response.data && response.data.questions) {\n                    setQuizData(response.data);\n                    // Initialize studentAnswers state\n                    const initialAnswers = {};\n                    response.data.questions.forEach(q => {\n                        initialAnswers[q.id] = null; // No answer selected initially for MCQs\n                    });\n                    setStudentAnswers(initialAnswers);\n                } else {\n                    throw new Error(\"Quiz data or questions missing in API response.\");\n                }\n            } catch (err) {\n                console.error(\"Error fetching quiz for student:\", err);\n                showError(err.response?.data?.error || \"Could not load the quiz. It might not be available or an error occurred.\");\n                setQuizData(null); // Clear quiz data on error\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchQuizToTake();\n    }, [quizId, showError]);\n\n    const handleAnswerSelect = (questionId, choiceId) => {\n        setStudentAnswers(prevAnswers => ({\n            ...prevAnswers,\n            [questionId]: choiceId\n        }));\n    };\n\n    const handleSubmitQuiz = async () => {\n        // Check if all questions are answered (optional, depends on requirements)\n        const unansweredQuestions = quizData.questions.filter(q => studentAnswers[q.id] === null || studentAnswers[q.id] === undefined);\n        if (unansweredQuestions.length > 0) {\n            if (!window.confirm(`You have ${unansweredQuestions.length} unanswered question(s). Are you sure you want to submit?`)) {\n                return;\n            }\n        }\n\n        setIsSubmitting(true);\n        setError('');\n        console.log(\"Submitting answers:\", studentAnswers);\n\n        // The backend expects { question_id: \"answer_text_or_choice_id\", ... }\n        // For MCQs, our studentAnswers stores choiceId, but backend might expect choice_text.\n        // Let's adjust to send choice_text if that's what the backend grading needs.\n        // If backend grades based on choice ID, then studentAnswers is fine.\n        // For now, assuming studentAnswers stores choice_text (what student clicks on).\n        // Revisit this based on backend grading logic for `submit_quiz_answers`.\n        // For the current backend, it expects the *choice_text* for MCQ grading.\n        const payload = {};\n        for (const question of quizData.questions) {\n            const selectedChoiceId = studentAnswers[question.id];\n            if (selectedChoiceId) {\n                const selectedChoice = question.choices.find(c => c.id === selectedChoiceId);\n                payload[question.id] = selectedChoice ? selectedChoice.choice_text : null;\n            } else {\n                payload[question.id] = null; // Or an empty string for unanswered\n            }\n        }\n        console.log(\"Payload to submit:\", payload);\n\n\n          try {\n            const response = await submitStudentQuiz(quizId, payload);\n            console.log(\"Quiz submission response:\", response.data);\n\n            // --- NAVIGATE TO RESULTS PAGE ---\n            if (response.data && response.data.id) { // response.data should be the attempt object\n                navigate(`/student/dashboard/attempts/${response.data.id}`);\n            } else {\n                // Fallback or error handling if attempt ID is not returned\n                showError(\"Quiz submitted, but could not load results page automatically.\");\n                navigate('/student/dashboard'); // Or stay on page and show score\n            }\n            // --- END NAVIGATION ---\n\n        } catch (err) {\n            console.error(\"Error submitting quiz:\", err);\n            showError(err.response?.data?.error || \"Failed to submit your answers. Please try again.\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    if (isLoading) {\n        return <div className=\"loading-fullscreen\"><FaSpinner className=\"spin\" /> Loading Quiz...</div>;\n    }\n\n    if (error && !quizData) { // Show prominent error if quiz failed to load entirely\n        return (\n            <div className=\"page-content-wrapper quiz-taker-error\">\n                <div className=\"message error-message global-message\">\n                    <FaExclamationCircle size={24} />\n                    <div>\n                        <h4>Error Loading Quiz</h4>\n                        <p>{error}</p>\n                        <Link to=\"/student/dashboard\" className='button subtle-button'>Back to Dashboard</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (!quizData) { // Should be caught by isLoading or error, but as a fallback\n        return <div className=\"page-content-wrapper\"><p>No quiz data available.</p></div>;\n    }\n\n    return (\n        <div className=\"quiz-taker-page page-content-wrapper\">\n            <div className=\"page-header\">\n                <h2>{quizData.title}</h2>\n                {/* Add a timer here later if needed */}\n            </div>\n            {quizData.description && <p className=\"quiz-description-taker\">{quizData.description}</p>}\n\n            {error && <div className=\"message error-message global-message\" style={{marginBottom: '1rem'}}>{error}</div>}\n\n            <form onSubmit={(e) => { e.preventDefault(); handleSubmitQuiz(); }}>\n                {quizData.questions.map((question, index) => (\n                    <div key={question.id} className=\"quiz-question-block widget\">\n                        <h4>Question {index + 1}</h4>\n                        <p className=\"question-text-taker\">{question.question_text}</p>\n                        {question.question_type === 'mcq' && (\n                            <div className=\"choices-group\">\n                                {question.choices.map(choice => (\n                                    <label\n                                        key={choice.id}\n                                        className={`choice-label ${studentAnswers[question.id] === choice.id ? 'selected' : ''}`}\n                                    >\n                                        <input\n                                            type=\"radio\"\n                                            name={`question-${question.id}`}\n                                            value={choice.id}\n                                            checked={studentAnswers[question.id] === choice.id}\n                                            onChange={() => handleAnswerSelect(question.id, choice.id)}\n                                            className=\"choice-radio\"\n                                        />\n                                        {studentAnswers[question.id] === choice.id ? <FaCheckCircle className=\"choice-icon selected\"/> : <FaRegCircle className=\"choice-icon\"/>}\n                                        <span className=\"choice-text\">{choice.choice_text}</span>\n                                    </label>\n                                ))}\n                            </div>\n                        )}\n                        {/* Add rendering for other question types here later */}\n                    </div>\n                ))}\n\n                <div className=\"quiz-submit-area\">\n                    <button type=\"submit\" className=\"button primary-button large-button\" disabled={isSubmitting}>\n                        {isSubmitting ? <><FaSpinner className=\"spin\" /> Submitting...</> : <><FaPaperPlane /> Submit Answers</>}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default QuizTaker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}